name: testRigor E2E on OpenCart 

on:
  push:
    branches: ["**"]
  workflow_dispatch:

jobs:
  e2e:
    runs-on: ubuntu-latest
    env:
      LOCAL_BASE_URL: http://127.0.0.1/
      TESTRIGOR_SUITE_ID: ${{ vars.TESTRIGOR_SUITE_ID }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      # 1) Packages: Apache, MariaDB, PHP (+extensions), utils
      - name: Install system packages
        run: |
          sudo apt-get update
          sudo DEBIAN_FRONTEND=noninteractive apt-get -y install \
            apache2 mariadb-server unzip git rsync curl
          sudo DEBIAN_FRONTEND=noninteractive apt-get -y install \
            php php-cli php-common php-mysql php-gd php-curl php-zip php-xml php-mbstring
          sudo a2enmod rewrite
          # systemctl is not available on hosted runners; use service instead
          sudo service apache2 start
          sudo service apache2 status || true
          php -v

      # 2) FULL MariaDB reset (destructive) and DB/user creation
      - name: Reset MariaDB datadir and initialize
        run: |
          set -e
          sudo service mariadb stop || true
          sudo rm -f /var/run/mysqld/mysqld.pid 2>/dev/null || true
          sudo sed -i '/innodb_force_recovery/d' /etc/mysql/mariadb.conf.d/50-server.cnf 2>/dev/null || true

          sudo rm -rf /var/lib/mysql/*
          sudo mkdir -p /var/lib/mysql /var/run/mysqld
          sudo chown -R mysql:mysql /var/lib/mysql /var/run/mysqld

          if command -v mariadb-install-db >/dev/null 2>&1; then
            sudo mariadb-install-db --no-defaults --user=mysql --basedir=/usr --datadir=/var/lib/mysql
          else
            sudo mysql_install_db  --no-defaults --user=mysql --basedir=/usr --datadir=/var/lib/mysql
          fi

          sudo service mariadb start
          sudo service mariadb status || true

      - name: Create OpenCart database and user
        run: |
          sudo mysql <<'SQL'
          CREATE DATABASE IF NOT EXISTS opencart CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci;
          CREATE USER IF NOT EXISTS 'oc_user'@'127.0.0.1' IDENTIFIED BY 'Password#123!';
          CREATE USER IF NOT EXISTS 'oc_user'@'localhost'   IDENTIFIED BY 'Password#123!';
          GRANT ALL PRIVILEGES ON opencart.* TO 'oc_user'@'127.0.0.1';
          GRANT ALL PRIVILEGES ON opencart.* TO 'oc_user'@'localhost';
          FLUSH PRIVILEGES;
          SQL

          # quick test (prints 1)
          mysql -h 127.0.0.1 -P 3306 -u oc_user -pPassword#123! opencart -e "SELECT 1;"

      # 3) Get OpenCart code (fresh), place under /var/www/opencart
      - name: Fetch OpenCart code
        run: |
          set -e
          sudo rm -rf /var/www/opencart
          sudo mkdir -p /var/www/opencart

          rm -rf /tmp/opencart-src
          git clone --depth=1 https://github.com/opencart/opencart.git /tmp/opencart-src
          sudo rsync -a /tmp/opencart-src/upload/ /var/www/opencart/

          cd /var/www/opencart
          sudo cp config-dist.php config.php
          sudo cp admin/config-dist.php admin/config.php

          sudo chown -R www-data:www-data /var/www/opencart
          find /var/www/opencart -type d -exec sudo chmod 755 {} \;
          find /var/www/opencart -type f -exec sudo chmod 644 {} \;
          # make configs writable for install
          sudo chmod 664 /var/www/opencart/config.php /var/www/opencart/admin/config.php

      # 4) Apache VirtualHost pointing to /var/www/opencart
      - name: Configure Apache vhost for OpenCart
        run: |
          sudo tee /etc/apache2/sites-available/opencart.conf >/dev/null <<'APACHE'
          <VirtualHost *:80>
            ServerName  _default_
            DocumentRoot /var/www/opencart

            <Directory /var/www/opencart>
              AllowOverride All
              Require all granted
            </Directory>

            ErrorLog ${APACHE_LOG_DIR}/opencart_error.log
            CustomLog ${APACHE_LOG_DIR}/opencart_access.log combined
          </VirtualHost>
          APACHE

          sudo a2dissite 000-default.conf 2>/dev/null || true
          sudo a2ensite opencart.conf
          sudo service apache2 reload

          # quick sanity
          curl -I http://127.0.0.1/ || true

      # 5) OpenCart installation via CLI (if available), else fall back to web bootstrap
      - name: Install OpenCart (CLI if present)
        run: |
          set -e
          if [ -f /var/www/opencart/install/cli_install.php ]; then
            php /var/www/opencart/install/cli_install.php install \
              --db_hostname=127.0.0.1 \
              --db_username=oc_user \
              --db_password='Password#123!' \
              --db_database=opencart \
              --db_driver=mysqli \
              --db_port=3306 \
              --username=admin \
              --password='Opencart123' \
              --email='testing+opencart@testrigor.com' \
              --http_server="${LOCAL_BASE_URL}"
          else
            echo "cli_install.php not found; proceeding without it (store may require web install)."
          fi

          # remove installer directory if present
          sudo rm -rf /var/www/opencart/install/

      # 6) Post-install hardening + SEO tweaks
      - name: Post-install: move storage and (optionally) rename admin
        run: |
          set -e
          # move system/storage outside webroot
          sudo mkdir -p /var/storage_oc
          if [ -d /var/www/opencart/system/storage ]; then
            sudo rsync -a /var/www/opencart/system/storage/ /var/storage_oc/
          fi
          sudo chown -R www-data:www-data /var/storage_oc

          # update DIR_STORAGE in configs
          sudo sed -i "s#^define('DIR_STORAGE'.*#define('DIR_STORAGE', '/var/storage_oc/');#g" /var/www/opencart/config.php || true
          sudo sed -i "s#^define('DIR_STORAGE'.*#define('DIR_STORAGE', '/var/storage_oc/');#g" /var/www/opencart/admin/config.php || true

          # OPTIONAL: rename /admin to /adm (safe if you want it)
          if [ -d /var/www/opencart/admin ]; then
            sudo mv /var/www/opencart/admin /var/www/opencart/adm
            sudo sed -i "s#/admin/#/adm/#g" /var/www/opencart/adm/config.php || true
            sudo sed -i "s#opencart/admin/#opencart/adm/#g" /var/www/opencart/adm/config.php || true
          fi

          sudo service apache2 restart

      # Wait for the site to answer 200s consistently before triggering tests
      - name: Wait for OpenCart to be reachable (curl)
        run: |
          for i in {1..60}; do
            if curl -fsS -o /dev/null -L "${LOCAL_BASE_URL}"; then
              echo "OpenCart is up at ${LOCAL_BASE_URL}"; exit 0
            fi
            echo "Waiting for OpenCart... ($i/60)"; sleep 5
          done
          echo "OpenCart failed to start in time" >&2; exit 1

      - name: Verify HTTP headers (sanity)
        run: curl -LI "${LOCAL_BASE_URL}" || true

      # testRigor: Node + CLI and run against localhost
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install testRigor CLI
        run: |
          npm i -g testrigor-cli
          testrigor --version || true
          npx -y testrigor-cli --version

      - name: Trigger testRigor suite against localhost
        env:
          TESTRIGOR_CI_TOKEN: ${{ secrets.TESTRIGOR_CI_TOKEN }}
        run: |
          echo "Suite ID: $TESTRIGOR_SUITE_ID"
          echo "URL:      $LOCAL_BASE_URL"
          npx -y testrigor-cli test-suite run "$TESTRIGOR_SUITE_ID" \
            --token "$TESTRIGOR_CI_TOKEN" \
            --localhost --url "$LOCAL_BASE_URL" \
            --verbose
