name: testRigor E2E on OpenCart (localhost)

on:
  push:
    branches: ["**"]
  workflow_dispatch:

jobs:
  e2e:
    runs-on: ubuntu-latest
    env:
      # testRigor
      TESTRIGOR_SUITE_ID: ${{ vars.TESTRIGOR_SUITE_ID }}

      # OpenCart auto-install knobs (used by the php service in docker-compose)
      OPENCART_USERNAME: admin
      OPENCART_PASSWORD: admin123
      OPENCART_ADMIN_EMAIL: testing+opencart@testrigor.com
      OPENCART_HTTP_SERVER: http://localhost/   # compose uses this to set store URL
      DB_DRIVER: mysqli
      DB_HOSTNAME: mysql
      DB_USERNAME: opencart
      DB_PASSWORD: opencart
      DB_DATABASE: opencart
      DB_PORT: "3306"
      DB_PREFIX: oc_

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Start services (docker-compose)
        run: |
          docker compose -f docker-compose.yml up -d --build --remove-orphans --quiet-pull
          docker compose ps

      - name: Detect services and URL
        shell: bash
        run: |
          set -euo pipefail
          # Choose the web service (commonly 'apache')
          WEB_SVC="apache"
          if ! docker compose ps --services | grep -qx "$WEB_SVC"; then
            WEB_SVC="$(docker compose ps --services | head -n1)"
          fi

          # Derive published HTTP port (80 or 8080)
          PORT="$(docker compose port "$WEB_SVC" 80 2>/dev/null | awk -F: 'NF{print $NF}' | tail -n1 || true)"
          if [ -z "$PORT" ]; then
            PORT="$(docker compose port "$WEB_SVC" 8080 2>/dev/null | awk -F: 'NF{print $NF}' | tail -n1 || true)"
          fi
          if [ -z "$PORT" ] || [ "$PORT" = "80" ]; then
            echo "LOCAL_BASE_URL=http://localhost" >> "$GITHUB_ENV"
          else
            echo "LOCAL_BASE_URL=http://localhost:$PORT" >> "$GITHUB_ENV"
          fi
          echo "Resolved LOCAL_BASE_URL=$(cat $GITHUB_ENV | grep LOCAL_BASE_URL | cut -d= -f2-)"

      - name: Wait for OpenCart to be reachable
        shell: bash
        run: |
          set -e
          # Allow auto-install in php container to finish; poll front page
          for i in {1..90}; do
            if curl -fsS -o /dev/null -L "$LOCAL_BASE_URL"; then
              echo "OpenCart is up at $LOCAL_BASE_URL"
              exit 0
            fi
            echo "Waiting for OpenCart... ($i/90)"
            sleep 3
          done
          echo "::group::Recent container logs"
          docker compose logs --no-color --tail=200
          echo "::endgroup::"
          exit 1

      - name: Verify HTTP headers (sanity)
        run: curl -LI "$LOCAL_BASE_URL" || true

      - name: Setup Node.js (for testRigor CLI)
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install testRigor CLI
        run: |
          npm i -g testrigor-cli
          testrigor --version || true

      - name: Trigger testRigor suite against localhost
        env:
          TESTRIGOR_CI_TOKEN: ${{ secrets.TESTRIGOR_CI_TOKEN }}
        run: |
          echo "Suite ID: $TESTRIGOR_SUITE_ID"
          echo "URL:      $LOCAL_BASE_URL"
          npx -y testrigor-cli test-suite run "$TESTRIGOR_SUITE_ID" \
            --token "$TESTRIGOR_CI_TOKEN" \
            --localhost --url "$LOCAL_BASE_URL" \
            --verbose
