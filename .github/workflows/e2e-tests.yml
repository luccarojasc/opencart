name: OpenCart + testRigor E2E

on:
  push:
    branches: ["**"]
  workflow_dispatch:

jobs:
  opencart_e2e:
    runs-on: ubuntu-latest
    env:
      LOCAL_BASE_URL: http://localhost/
      ENTRY_PATH: index.php?route=common/home
      TESTRIGOR_SUITE_ID: ${{ vars.TESTRIGOR_SUITE_ID }}
      TESTRIGOR_CI_TOKEN: ${{ secrets.TESTRIGOR_CI_TOKEN }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install prerequisites
        shell: bash
        run: |
          set -euxo pipefail
          sudo apt-get update
          sudo DEBIAN_FRONTEND=noninteractive apt-get -y install \
            apache2 mariadb-server unzip git rsync curl \
            php php-cli php-common php-mysql php-gd php-curl php-zip php-xml php-mbstring \
            libapache2-mod-php
          sudo a2enmod rewrite
          MOD="$(ls /etc/apache2/mods-available/php*.load 2>/dev/null | sed 's#.*/##; s/\.load$//' | sort -V | tail -n1)"
          if [ -n "$MOD" ]; then sudo a2enmod "$MOD"; fi
          echo 'DirectoryIndex index.php index.html' | sudo tee /etc/apache2/conf-available/dirindex.conf >/dev/null
          sudo a2enconf dirindex || true
          if command -v systemctl >/dev/null 2>&1; then
            sudo systemctl enable --now apache2
            sudo systemctl enable --now mariadb
            sudo systemctl reload apache2
          else
            sudo service apache2 start
            sudo service mariadb start
            sudo service apache2 reload
          fi

      - name: Reset MariaDB
        shell: bash
        run: |
          set -euxo pipefail
          if command -v systemctl >/dev/null 2>&1; then
            sudo systemctl stop mariadb || true
          else
            sudo service mariadb stop || true
          fi
          sudo rm -f /var/run/mysqld/mysqld.pid 2>/dev/null || true
          sudo sed -i '/innodb_force_recovery/d' /etc/mysql/mariadb.conf.d/50-server.cnf 2>/dev/null || true
          sudo rm -rf /var/lib/mysql/*
          sudo mkdir -p /var/lib/mysql /var/run/mysqld
          sudo chown -R mysql:mysql /var/lib/mysql /var/run/mysqld
          if command -v mariadb-install-db >/dev/null 2>&1; then
            sudo mariadb-install-db --no-defaults --user=mysql --basedir=/usr --datadir=/var/lib/mysql
          else
            sudo mysql_install_db --no-defaults --user=mysql --basedir=/usr --datadir=/var/lib/mysql
          fi
          if command -v systemctl >/dev/null 2>&1; then
            sudo systemctl start mariadb
            sudo systemctl enable mariadb || true
          else
            sudo service mariadb start
          fi

      - name: Create OpenCart database and users
        shell: bash
        run: |
          set -euxo pipefail
          sudo mysql <<'SQL'
          CREATE DATABASE IF NOT EXISTS opencart CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci;
          CREATE USER IF NOT EXISTS 'oc_user'@'127.0.0.1' IDENTIFIED BY 'Password#123!';
          CREATE USER IF NOT EXISTS 'oc_user'@'localhost' IDENTIFIED BY 'Password#123!';
          GRANT ALL PRIVILEGES ON opencart.* TO 'oc_user'@'127.0.0.1';
          GRANT ALL PRIVILEGES ON opencart.* TO 'oc_user'@'localhost';
          FLUSH PRIVILEGES;
          SQL
          mysql -h 127.0.0.1 -P 3306 -u oc_user -p'Password#123!' opencart -N -e "SELECT 1;"

      - name: Fetch OpenCart code and prepare configs
        shell: bash
        run: |
          set -euxo pipefail
          sudo rm -rf /var/www/opencart
          sudo mkdir -p /var/www/opencart
          rm -rf /tmp/opencart-src
          git clone --depth=1 https://github.com/opencart/opencart.git /tmp/opencart-src
          sudo rsync -a /tmp/opencart-src/upload/ /var/www/opencart/
          cd /var/www/opencart
          sudo cp config-dist.php config.php
          sudo cp admin/config-dist.php admin/config.php
          sudo chown -R www-data:www-data /var/www/opencart
          find /var/www/opencart -type d -exec sudo chmod 755 {} \;
          find /var/www/opencart -type f -exec sudo chmod 644 {} \;
          sudo chmod 664 /var/www/opencart/config.php /var/www/opencart/admin/config.php

      - name: Configure Apache VirtualHost
        shell: bash
        run: |
          set -euxo pipefail
          sudo tee /etc/apache2/sites-available/opencart.conf >/dev/null <<'APACHE'
          <VirtualHost *:80>
            ServerName localhost
            DocumentRoot /var/www/opencart
            <Directory /var/www/opencart>
              AllowOverride All
              Require all granted
              DirectoryIndex index.php
            </Directory>
            ErrorLog ${APACHE_LOG_DIR}/opencart_error.log
            CustomLog ${APACHE_LOG_DIR}/opencart_access.log combined
          </VirtualHost>
          APACHE
          sudo a2dissite 000-default.conf 2>/dev/null || true
          sudo a2ensite opencart.conf
          if command -v systemctl >/dev/null 2>&1; then
            sudo systemctl reload apache2
          else
            sudo service apache2 reload
          fi

      - name: Install OpenCart via CLI (with logs)
        shell: bash
        run: |
          set -euxo pipefail
          test -f /var/www/opencart/install/cli_install.php
          sudo -u www-data php /var/www/opencart/install/cli_install.php install \
            --db-hostname=127.0.0.1   --db_hostname=127.0.0.1 \
            --db-username=oc_user     --db_username=oc_user \
            --db-password='Password#123!' --db_password='Password#123!' \
            --db-database=opencart    --db_database=opencart \
            --db-driver=mysqli        --db_driver=mysqli \
            --db-port=3306            --db_port=3306 \
            --username=admin \
            --password='Opencart123' \
            --email='testing+opencart@testrigor.com' \
            --http-server="${LOCAL_BASE_URL}" --http_server="${LOCAL_BASE_URL}" \
            | tee /tmp/oc_cli_install.log || true
          tail -n 200 /tmp/oc_cli_install.log || true

      - name: Verify OpenCart installation
        shell: bash
        run: |
          set -euxo pipefail
          HAS_DIR_APP="$(php -r "(@include '/var/www/opencart/config.php'); echo defined('DIR_APPLICATION') ? 'yes' : 'no';")"
          TABLES="$(mysql -h 127.0.0.1 -u oc_user -p'Password#123!' -D opencart -N -e "SHOW TABLES LIKE 'oc\_%';" | wc -l || true)"
          echo "DIR_APPLICATION defined: $HAS_DIR_APP"
          echo "oc_% tables count: $TABLES"
          if [ "$HAS_DIR_APP" != "yes" ] || [ "${TABLES:-0}" -lt 10 ]; then
            sudo -u www-data php /var/www/opencart/install/cli_install.php install \
              --db-hostname=127.0.0.1   --db_hostname=127.0.0.1 \
              --db-username=oc_user     --db_username=oc_user \
              --db-password='Password#123!' --db_password='Password#123!' \
              --db-database=opencart    --db_database=opencart \
              --db-driver=mysqli        --db_driver=mysqli \
              --db-port=3306            --db_port=3306 \
              --username=admin \
              --password='Opencart123' \
              --email='testing+opencart@testrigor.com' \
              --http-server="${LOCAL_BASE_URL}" --http_server="${LOCAL_BASE_URL}" \
              | tee -a /tmp/oc_cli_install.log || true
            HAS_DIR_APP="$(php -r "(@include '/var/www/opencart/config.php'); echo defined('DIR_APPLICATION') ? 'yes' : 'no';")"
            TABLES="$(mysql -h 127.0.0.1 -u oc_user -p'Password#123!' -D opencart -N -e "SHOW TABLES LIKE 'oc\_%';" | wc -l || true)"
          fi
          if [ "$HAS_DIR_APP" != "yes" ] || [ "${TABLES:-0}" -lt 10 ]; then
            echo "OpenCart CLI install still incomplete."
            head -n 60 /var/www/opencart/config.php || true
            head -n 60 /var/www/opencart/admin/config.php || true
            sudo tail -n 200 /var/log/apache2/error.log || true
            exit 1
          fi

      - name: Remove OpenCart installer directory
        shell: bash
        run: |
          set -euxo pipefail
          sudo rm -rf /var/www/opencart/install/
          test ! -d /var/www/opencart/install

      - name: Move storage outside webroot
        shell: bash
        run: |
          set -euxo pipefail
          sudo mkdir -p /var/storage_oc
          sudo rsync -a /var/www/opencart/system/storage/ /var/storage_oc/
          sudo chown -R www-data:www-data /var/storage_oc
          sudo sed -i "s#^define('DIR_STORAGE'.*#define('DIR_STORAGE', '/var/storage_oc/');#g" /var/www/opencart/config.php
          sudo sed -i "s#^define('DIR_STORAGE'.*#define('DIR_STORAGE', '/var/storage_oc/');#g" /var/www/opencart/admin/config.php

      - name: Wait for site to be reachable
        shell: bash
        run: |
          set -euxo pipefail
          URLS=(
            "${LOCAL_BASE_URL}"
            "${LOCAL_BASE_URL}index.php"
            "${LOCAL_BASE_URL}${ENTRY_PATH}"
          )
          for i in {1..60}; do
            for u in "${URLS[@]}"; do
              code="$(curl -s -o /dev/null -w "%{http_code}" -L "$u" || true)"
              if [ "${code:-000}" -ge 200 ] && [ "${code:-000}" -lt 400 ]; then
                echo "OK $u -> $code"
                echo "TEST_URL=$u" >> "$GITHUB_ENV"
                exit 0
              fi
            done
            sleep 2
          done
          curl -I "${LOCAL_BASE_URL}" || true
          sudo tail -n 200 /var/log/apache2/error.log || true
          exit 1

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install testRigor CLI
        shell: bash
        run: |
          set -euxo pipefail
          npm i -g testrigor-cli
          testrigor --version || true

      - name: Run testRigor suite against localhost
        shell: bash
        env:
          TESTRIGOR_CI_TOKEN: ${{ secrets.TESTRIGOR_CI_TOKEN }}
        run: |
          set -euxo pipefail
          URL="${TEST_URL:-${LOCAL_BASE_URL}${ENTRY_PATH}}"
          echo "Suite ID: ${TESTRIGOR_SUITE_ID}"
          echo "URL: ${URL}"
          npx -y testrigor-cli test-suite run "${TESTRIGOR_SUITE_ID}" \
            --token "${TESTRIGOR_CI_TOKEN}" \
            --localhost --url "${URL}" \
            --verbose
